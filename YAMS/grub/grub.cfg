# YAMS (Yet Another Multiboot System)
# grub.cfg

set root=(hd0,msdos1)
set timeout=10
set default=0

insmod regexp
insmod ps2mouse
export imgfolders="/YAMS/IMG"

# Partition holding files
probe -u $root --set=rootuuid
set imgdevpath="/dev/disk/by-uuid/$rootuuid"
export imgdevpath rootuuid

# Detected x86 processor architecture
if cpuid -l; then
    export arch=amd64
else
	export arch=i386
fi

# Save platform information
save_env arch
save_env grub_platform

# Load grubenv
load_env

export isEV="0"
export isST="0"
export isLVM="0"
export isRAID="0"
export isRAIDLVM="0"
export isPATA="0"
export isUSB="0"

function load_video{
	if [ x$feature_all_video_module = xy ]; then
		insmod all_video
	else
		insmod efi_gop
		insmod efi_uga
		insmod ieee1275_fb
		insmod vbe
		insmod vga
		insmod video_bochs
		insmod video_cirrus
	fi
}

if loadfont ${prefix}/fonts/unicode.pf2; then
	load_video
	insmod gfxmenu
	insmod gfxterm
	set gfxmode=3840x2160,1920x1080,1600x1200,1776x1000,1680x1050,1400x1050,1600x900,1280x1024,1440x900,1280x960,1360x768,1280x800,1152x864,1280x768,1280x720,1024x768,1152x648,800x600,720x480,640x480,auto
	set gfxpayload=auto
	if ! terminal_output gfxterm; then
		terminal gfxterm
	fi
fi

# Load essy theme
insmod png
insmod jpeg
set theme=${prefix}/themes/essy/theme.txt
export theme

menuentry "Boot from first drive" {
	echo "Booting first drive..."
	chainloader (hd1)+1
	echo "Not found! Trying with osdetect:"
	sleep 2
	echo "Seraching Operating System..."
	configfile ${prefix}/configs/osdetect.cfg
	echo "No operating system could be found. Sorry :("
	sleep 3
}

menuentry "" {placeholder}

# Windows based
submenu "Windows based" {
	set isopath="${imgfolders}/Windows"
	
	echo -n "Seraching for Windows based ISO(s)... "
	for cfgfile in ${prefix}/configs/windows_based/*.d/*.cfg; do
		source "$cfgfile"
	done
	
	source ${prefix}/configs/alwaysopt.cfg
}

# Linux based
submenu "Linux based" {
	set isopath="${imgfolders}/Linux"
	
	echo -n "Seraching for Linux based ISO(s)... "
	for cfgfile in ${prefix}/configs/linux_based/*.d/*.cfg; do
		source "$cfgfile"
	done
	
	source ${prefix}/configs/alwaysopt.cfg
}

# BSD based
submenu "BSD based" {
	set isopath="${imgfolders}/BSD"
	
	echo -n "Seraching for BSD based ISO(s)... "
	for cfgfile in ${prefix}/configs/bsd_based/*.d/*.cfg; do
		source "$cfgfile"
	done
	
	source ${prefix}/configs/alwaysopt.cfg
}

# Darwin based
submenu "Darwin based" {
	set isopath="${imgfolders}/Darwin"
	
	echo -n "Seraching for Darwin based ISO(s)... "
	for cfgfile in ${prefix}/configs/darwin_based/*.d/*.cfg; do
		source "$cfgfile"
	done
	
	source ${prefix}/configs/alwaysopt.cfg
}

# Other
submenu "Other" {
	set isopath="${imgfolders}/Other"
	
	echo -n "Seraching for ISO(s)... "
	for cfgfile in ${prefix}/configs/other/*.d/*.cfg; do
		source "$cfgfile"
	done
	
	source ${prefix}/configs/alwaysopt.cfg
}

# Auto detect ISOs
menuentry "Auto detect ISOs (does not have to work)" {
	export isopath="${imgfolders}/Linux"
	
	echo -n "Seraching for ISO(s)... "
	configfile ${prefix}/configs/autoiso.cfg
	
	source ${prefix}/configs/alwaysopt.cfg
}

source ${prefix}/configs/alwaysopt.cfg